// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "engine/bin/modules/dbs/models/domain"

	mock "github.com/stretchr/testify/mock"

	sqlx "github.com/jmoiron/sqlx"
)

// BulkConnectionPkg is an autogenerated mock type for the Connection type
type BulkConnectionPkg struct {
	mock.Mock
}

// GetBulkConnectionSql provides a mock function with given fields: dbs
func (_m *BulkConnectionPkg) GetBulkConnectionSql(dbs models.Dbs) (*sqlx.DB, error) {
	ret := _m.Called(dbs)

	var r0 *sqlx.DB
	if rf, ok := ret.Get(0).(func(models.Dbs) *sqlx.DB); ok {
		r0 = rf(dbs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sqlx.DB)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.Dbs) error); ok {
		r1 = rf(dbs)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewBulkConnectionPkg interface {
	mock.TestingT
	Cleanup(func())
}

// NewBulkConnectionPkg creates a new instance of BulkConnectionPkg. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBulkConnectionPkg(t mockConstructorTestingTNewBulkConnectionPkg) *BulkConnectionPkg {
	mock := &BulkConnectionPkg{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
