// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"
	models "engine/bin/modules/resources-mapping/models/domain"

	mock "github.com/stretchr/testify/mock"
)

// ResourcesMappingPostgre is an autogenerated mock type for the ResourcesMappingPostgre type
type ResourcesMappingPostgre struct {
	mock.Mock
}

// FindByServiceId provides a mock function with given fields: ctx, servicesId
func (_m *ResourcesMappingPostgre) FindByServiceId(ctx context.Context, serviceId string) (models.ResourcesMappingList, error) {
	ret := _m.Called(ctx, serviceId)

	var r0 models.ResourcesMappingList
	if rf, ok := ret.Get(0).(func(context.Context, string) models.ResourcesMappingList); ok {
		r0 = rf(ctx, serviceId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(models.ResourcesMappingList)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, serviceId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewResourcesMappingPostgre interface {
	mock.TestingT
	Cleanup(func())
}

// NewResourcesMappingPostgre creates a new instance of ResourcesMappingPostgre. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewResourcesMappingPostgre(t mockConstructorTestingTNewResourcesMappingPostgre) *ResourcesMappingPostgre {
	mock := &ResourcesMappingPostgre{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
