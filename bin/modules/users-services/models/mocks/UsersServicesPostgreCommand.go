// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"
	models "engine/bin/modules/users-services/models/domain"

	mock "github.com/stretchr/testify/mock"
)

// UsersServicesPostgreCommand is an autogenerated mock type for the UsersServicesPostgre type
type UsersServicesPostgreCommand struct {
	mock.Mock
}

// DeleteByUsersIdAndServiceUrl provides a mock function with given fields: ctx, usersId, serviceUrl
func (_m *UsersServicesPostgreCommand) DeleteByUsersIdAndServiceUrl(ctx context.Context, usersId string, serviceUrl string) error {
	ret := _m.Called(ctx, usersId, serviceUrl)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, usersId, serviceUrl)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// InsertOne provides a mock function with given fields: ctx, usersServices
func (_m *UsersServicesPostgreCommand) InsertOne(ctx context.Context, usersServices *models.UsersServices) error {
	ret := _m.Called(ctx, usersServices)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.UsersServices) error); ok {
		r0 = rf(ctx, usersServices)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUsersServicesPostgreCommand interface {
	mock.TestingT
	Cleanup(func())
}

// NewUsersServicesPostgreCommand creates a new instance of UsersServicesPostgreCommand. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUsersServicesPostgreCommand(t mockConstructorTestingTNewUsersServicesPostgreCommand) *UsersServicesPostgreCommand {
	mock := &UsersServicesPostgreCommand{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
